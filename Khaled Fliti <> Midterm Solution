import urllib.request
import validators
def openTab(lst):
  dict = {"Title": "", "url": "", "parent_tab": 0.5, "child_tab": []}
  dict["Title"] = input("Enter title: ")
  dict["url"] = input("Enter URL start with 'http://': ")
  url = dict["url"]
  valid = validators.url(url)
  while (not valid):
    print("Invalid URL , Please try again ")
    dict["url"] = input("Enter URL start with 'http://: ")
    valid = validators.url(url)
    url = dict["url"]
  lst.append(dict)
  return lst
#--------------------------------------------------------------------------
def switchTab(lst):
  if(len(lst) == 0):
    print("No tabs open")
    return 0
  else:
    index = input("Enter index of tab to display : ")
    x = True
    while(x):#check index is valid or not
      try :
        index = int(index)
      except ValueError:
        print("Invalid input . Pleae enter valid index")
        index = input("Enter index of tab to display : ")
        continue
      x = False
  if((-1 * len(lst)) <= int(index) and int(index) < len(lst)):# if the user type -1 , it will display the last tab , -2 , it will display the second last tab 
    url = lst[index]["url"]
  else:
    url = lst[-1]["url"]
  page = urlopen(url)#open the url
  html = page.read().decode("utf-8")#get the html code
  return html
#---------------------------------------------------------------------------
def openNestedTab(lst):
  dict = {"Title": "", "url": "", "parent_tab": 0.5, "child_tab": []}#"parent_tab": 0.5 means that the new tab doesnit have a parent
  index_parent = input("Enter index of tab parent : ")
  x = True
  while(x):
    try :
      index_parent = int(index_parent)
    except ValueError:
      print("Invalid input . Pleae enter valid index")
      index_parent = input("Enter index of tab parent : ")
      continue
    x = False
    dict["Title"] = input("Enter title: ")
    url = input("Please add the url: ")
    valid = validators.url(url)#check the url is valid or not
    while (not valid):
      print("Invalid URL , Please try again ")
      url = input("Please add the url: ")
      valid = validators.url(url)
  dict["url"] = url
  dict["child_tab"] = []
  dict["parent_tab"] = 0.5 # this tab doesn't have a parent 
  for i in range (len(lst)):
    if(url in lst[i]["url"]):# we chek if the new tab has children
      dict["child_tab"].append(lst[i])

  if(lst[index_parent]["url"] in url):# we check if the new tab has a parent
    dict["parent_tab"] = index_parent # the index inputed it is index of parent
    lst[index_parent]["child_tab"].append(dict)
  else: # the index inputed not the parent of new tab we need to find its parent 
    for i in range(len(lst)):
      if(lst[i]["url"] in url):
#-----------------------------------------------------------------------------
def printAllTab(lst):
  if(len(lst) == 0):
    print("No tabs open ")
  else: 
    parent_list = []
    i = 0 
    while(i < len(lst)):#here we extract all the parents from the list of tabs
        if(lst[i]["parent_tab"] == 0.5):
          parent_list.append(lst[i])
        i += 1
    i = 0
    while(i < len(parent_list)): 
      printParentAndchild(parent_list[i])
      i += 1
def printParentAndchild(dict):# here we print the parent and  its children
  if(dict["child_tab"] == []):
    print(dict["Title"], dict["url"])
  else:
    print(dict["Title"], dict["url"])
    for i in range(len(dict["child_tab"])):
      printParentAndchild(dict["child_tab"][i])
        dict["parent_tab"] = i
        lst[i]["child_tab"].append(dict)
  lst.append(dict)
  return lst
